# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-01-31 02:44
from __future__ import unicode_literals

from django.db import migrations
import arrow


conventions = [['2017-03-10',
  '2017-03-12',
  'SUN',
  '2',
  'SUN International Quartet Prelims & District Chorus',
  'Orlando, FL'],
 ['2017-03-10',
  '2017-03-12',
  'FWD',
  '2',
  'FWD International Quartet Prelims & NE/NW Divisions',
  'Sacramento, CA'],
 ['2017-03-17',
  '2017-03-19',
  'DIX',
  '2',
  'DIX International Quartet Prelims & District Chorus',
  'Huntsville, AL'],
 ['2017-03-24',
  '2017-03-26',
  'NSC',
  '2',
  'NSC ANNUAL District Contest & All INTL Prelims',
  'Winston-Salem, NC'],
 ['2017-03-24',
  '2017-03-26',
  'CAR',
  '2',
  'CAR International Quartet Prelims & District Chorus',
  'Indianapolis, IN'],
 ['2017-03-24',
  '2017-03-25',
  'LOL',
  '2',
  'LOL Southwest & 10K Lakes Divisions',
  'Willmar, MN'],
 ['2017-03-31',
  '2017-04-02',
  'MAD',
  '2',
  'MAD International Quartet Prelims & District Seniors',
  'Reading, PA'],
 ['2017-03-31', '2017-04-01', 'EVG', '2', 'EVG Division I', 'Vancouver, BC'],
 ['2017-04-07',
  '2017-04-09',
  'EVG',
  '2',
  'EVG International Quartet Prelims & Division IV',
  'Salem, OR'],
 ['2017-04-07',
  '2017-04-09',
  'SLD',
  '2',
  'SLD International Quartet Prelims & District Chorus',
  'Geneva, NY'],
 ['2017-04-07',
  '2017-04-09',
  'ONT',
  '2',
  'ONT International Quartet Prelims & District Chorus',
  'London, ON'],
 ['2017-04-15',
  '2017-04-15',
  'BHS',
  '3',
  'BHS International Qualifier Youth (YBQC) Video Prelims',
  'At Home'],
 ['2017-04-21',
  '2017-04-23',
  'NED',
  '2',
  'NED Granite & Pine And Patriot Divisions',
  'Boston, MA'],
 ['2017-04-21',
  '2017-04-23',
  'JAD',
  '2',
  'JAD International Quartet Prelims & District Chorus',
  'Columbus, OH'],
 ['2017-04-21',
  '2017-04-23',
  'CSD',
  '2',
  'CSD International Quartet Prelims & District Chorus',
  'Wichita, KS'],
 ['2017-04-21',
  '2017-04-23',
  'EVG',
  '3',
  'EVG Division II',
  'Federal Way, WA'],
 ['2017-04-21',
  '2017-04-23',
  'PIO',
  '2',
  'PIO International Quartet Prelims & District Chorus',
  'Traverse City, MI'],
 ['2017-04-22', '2017-04-22', 'FWD', '1', 'FWD Arizona Division', 'Mesa, AZ'],
 ['2017-04-28',
  '2017-04-29',
  'MAD',
  '2',
  'MAD Central Division',
  'Reading, PA'],
 ['2017-04-29',
  '2017-04-29',
  'NED',
  '1',
  'NED Sunrise Division',
  'Fredericton, NB'],
 ['2017-05-05',
  '2017-05-07',
  'NED',
  '2',
  'NED International Quartet Prelims & Mountain and Yankee Divisions',
  'Lake George, NY'],
 ['2017-05-05',
  '2017-05-07',
  'LOL',
  '2',
  'LOL International Quartet Prelims & District Chorus & Two Divisions',
  'Stevens Point, WI'],
 ['2017-05-05',
  '2017-05-07',
  'SWD',
  '2',
  'SWD International Quartet Prelims & District Mixed Quartets',
  'TBD'],
 ['2017-05-12',
  '2017-05-13',
  'LOL',
  '1',
  'LOL Northern Plains Division',
  'Fargo, ND'],
 ['2017-05-13',
  '2017-05-13',
  'FWD',
  '2',
  'FWD Southwest & Southeast Divisions',
  'Southern CA - tbd'],
 ['2017-05-19', '2017-05-20', 'EVG', '1', 'EVG Division V', 'Boise, ID'],
 ['2017-05-26',
  '2017-05-27',
  'MAD',
  '2',
  'MAD Southern Division',
  'Reston, VA'],
 ['2017-05-26', '2017-05-27', 'EVG', '1', 'EVG Division III', 'Calgary, AB'],
 ['2017-06-02',
  '2017-06-03',
  'MAD',
  '2',
  'MAD Northern Division',
  'Cherry Hill, NJ'],
 ['2017-07-04',
  '2017-07-04',
  'BHS',
  '3',
  'BHS Youth Qt Contest (YBQC)',
  'Las Vegas, NV'],
 ['2017-07-05',
  '2017-07-08',
  'BHS',
  '5',
  'BHS Quartet and Chorus Contests',
  'Las Vegas, NV']]

def import_conventions(apps, schema_editor):
    Convention = apps.get_model("app", "Convention")
    Entity = apps.get_model("app", "Entity")
    for row in conventions:
        start_date = arrow.get(row[0]).date()
        end_date = arrow.get(row[1]).date()
        short_name = row[2].strip()
        if short_name == 'BHS':
            entity = Entity.objects.get(kind=1)
        else:
            try:
                entity = Entity.objects.get(
                    short_name__iexact=short_name,
                    kind=11,
                )
            except Entity.DoesNotExist:
                raise RuntimeError(short_name)
        panel = int(row[3])
        name = row[4].strip()
        location = row[5].strip()
        if 'District' in row[4]:
            level = 1
        elif 'Division' in row[4]:
            level = 2
        else:
            level = 0
        season = 4
        year = 2017
        if 'Prelims' in row[4]:
            is_prelims = True
        else:
            is_prelims = False
        Convention.objects.create(
            start_date=start_date,
            end_date=end_date,
            entity=entity,
            panel=panel,
            name=name,
            nomen=name,
            location=location,
            level=level,
            season=season,
            year=year,
            is_prelims=is_prelims,
        )


def reverse_conventions(apps, schema_editor):
    Convention = apps.get_model("app", "Convention")
    items = Convention.objects.filter(
        year=2017,
        season=4,
    )
    for item in items:
        item.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0006_convention_location'),
    ]

    operations = [
        migrations.RunPython(import_conventions, reverse_conventions),
    ]
