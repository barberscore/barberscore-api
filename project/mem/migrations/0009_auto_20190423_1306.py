# Generated by Django 2.1.8 on 2019-04-23 20:06

import api.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_fsm
import mem.validators
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('mem', '0008_auto_20190315_1436'),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('status', django_fsm.FSMIntegerField(choices=[(-50, 'Revoked'), (-40, 'Suspended'), (-30, 'Merged'), (-20, 'Closed'), (-10, 'Expired'), (0, 'New'), (10, 'Pending'), (20, 'Awaiting'), (30, 'Prospective'), (40, 'Penvol'), (60, 'Licensed'), (90, 'Active')], default=0)),
                ('name', models.CharField(max_length=255)),
                ('kind', models.IntegerField(choices=[(10, 'Organization'), (20, 'District'), (30, 'Group'), (40, 'Chapter'), (50, 'Chorus'), (60, 'Quartet')])),
                ('gender', models.IntegerField(blank=True, choices=[(10, 'Male'), (20, 'Female'), (30, 'Mixed')], null=True)),
                ('division', models.IntegerField(blank=True, choices=[('EVG', [(10, 'EVG Division I'), (20, 'EVG Division II'), (30, 'EVG Division III'), (40, 'EVG Division IV'), (50, 'EVG Division V')]), ('FWD', [(60, 'FWD Arizona'), (70, 'FWD Northeast'), (80, 'FWD Northwest'), (90, 'FWD Southeast'), (100, 'FWD Southwest')]), ('LOL', [(110, 'LOL 10000 Lakes'), (120, 'LOL Division One'), (130, 'LOL Northern Plains'), (140, 'LOL Packerland'), (150, 'LOL Southwest')]), ('MAD', [(170, 'MAD Central'), (180, 'MAD Northern'), (190, 'MAD Southern')]), ('NED', [(210, 'NED Granite and Pine'), (220, 'NED Mountain'), (230, 'NED Patriot'), (240, 'NED Sunrise'), (250, 'NED Yankee')]), ('SWD', [(260, 'SWD Northeast'), (270, 'SWD Northwest'), (280, 'SWD Southeast'), (290, 'SWD Southwest')])], null=True)),
                ('bhs_id', models.IntegerField(blank=True, null=True, unique=True, validators=[mem.validators.validate_bhs_id])),
                ('legacy_code', models.CharField(blank=True, default='', max_length=255)),
                ('website', models.URLField(blank=True, default='', help_text='\n            The website URL of the resource.')),
                ('email', api.fields.LowerEmailField(blank=True, help_text='\n            The contact email of the resource.', max_length=254, null=True, unique=True)),
                ('main_phone', models.CharField(blank=True, default='', help_text='\n            The main phone number of the resource.  Include country code.', max_length=25)),
                ('fax_phone', models.CharField(blank=True, default='', help_text='\n            The fax phone number of the resource.  Include country code.', max_length=25)),
                ('facebook', models.URLField(blank=True, default='', help_text='\n            The facebook URL of the resource.')),
                ('twitter', models.URLField(blank=True, default='', help_text='\n            The twitter URL of the resource.')),
                ('youtube', models.URLField(blank=True, default='', help_text='\n            The youtube URL of the resource.')),
                ('pinterest', models.URLField(blank=True, default='', help_text='\n            The pinterest URL of the resource.')),
                ('flickr', models.URLField(blank=True, default='', help_text='\n            The flickr URL of the resource.')),
                ('instagram', models.URLField(blank=True, default='', help_text='\n            The instagram URL of the resource.')),
                ('soundcloud', models.URLField(blank=True, default='', help_text='\n            The soundcloud URL of the resource.')),
                ('tin', models.CharField(blank=True, default='', help_text='\n            The Tax Identification Number.', max_length=18, validators=[django.core.validators.RegexValidator('(9\\d{2})([ \\-]?)([7]\\d|8[0-8])([ \\-]?)(\\d{4})', message='\n        Must be a Taxpayer Idenfication Number\n        in the form `XX-XXXXXXXX`.\n    ')])),
                ('address', models.TextField(blank=True, default='', help_text='\n            The complete address of the resource.', max_length=1000)),
                ('preferred_name', models.CharField(blank=True, default='', max_length=255)),
                ('first_alternate_name', models.CharField(blank=True, default='', max_length=255)),
                ('second_alternate_name', models.CharField(blank=True, default='', max_length=255)),
                ('description', models.TextField(blank=True, default='', max_length=255)),
                ('visitor_information', models.TextField(blank=True, default='', max_length=255)),
                ('chartered_date', models.DateField(blank=True, null=True)),
                ('licensed_date', models.DateField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='mem.Group')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterField(
            model_name='person',
            name='gender',
            field=models.IntegerField(blank=True, choices=[(10, 'Male'), (20, 'Female')], null=True),
        ),
        migrations.AlterField(
            model_name='person',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='person',
            name='part',
            field=models.IntegerField(blank=True, choices=[(1, 'Tenor'), (2, 'Lead'), (3, 'Baritone'), (4, 'Bass')], null=True),
        ),
    ]
