# Generated by Django 2.1.8 on 2019-05-07 16:50

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('api', '0128_auto_20190507_0950'),
    ]

    operations = [
        migrations.CreateModel(
            name='Complete',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('mark', models.BooleanField(default=False)),
                ('row', models.IntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('season_raw', models.CharField(blank=True, max_length=255)),
                ('district_raw', models.CharField(blank=True, max_length=255)),
                ('convention_raw', models.CharField(blank=True, max_length=255)),
                ('session_raw', models.CharField(blank=True, max_length=255)),
                ('round_raw', models.CharField(blank=True, max_length=255)),
                ('season_kind', models.IntegerField(blank=True, choices=[(1, 'Summer'), (2, 'Midwinter'), (3, 'Fall'), (4, 'Spring')], null=True)),
                ('district_code', models.CharField(blank=True, max_length=255)),
                ('convention_name', models.CharField(blank=True, max_length=255)),
                ('category_raw', models.CharField(blank=True, max_length=255)),
                ('session_kind', models.IntegerField(blank=True, choices=[(32, 'Chorus'), (41, 'Quartet'), (42, 'Mixed'), (43, 'Senior'), (44, 'Youth'), (45, 'Unknown'), (46, 'VLQ')], null=True)),
                ('round_kind', models.IntegerField(blank=True, choices=[(1, 'Finals'), (2, 'Semi-Finals'), (3, 'Quarter-Finals')], null=True)),
                ('category_kind', models.IntegerField(blank=True, choices=[(30, 'Music'), (40, 'Performance'), (50, 'Singing')], null=True)),
                ('panelist_name', models.CharField(blank=True, max_length=255, null=True)),
                ('panelist_num', models.IntegerField(blank=True, null=True)),
                ('points', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), blank=True, null=True, size=None)),
                ('slips', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), size=None), blank=True, null=True, size=None)),
                ('num_sessions', models.IntegerField(blank=True, null=True)),
                ('num_rounds', models.IntegerField(blank=True, null=True)),
                ('num_appearances', models.IntegerField(blank=True, null=True)),
                ('num_panelists', models.IntegerField(blank=True, null=True)),
                ('panelist', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.Panelist')),
            ],
        ),
        migrations.CreateModel(
            name='Flat',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('complete', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flats', to='keller.Complete')),
                ('score', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.Score')),
            ],
        ),
        migrations.CreateModel(
            name='Selection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('mark', models.BooleanField(default=False)),
                ('row', models.IntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('season_raw', models.CharField(blank=True, max_length=255)),
                ('district_raw', models.CharField(blank=True, max_length=255)),
                ('event_raw', models.CharField(blank=True, max_length=255)),
                ('session_raw', models.CharField(blank=True, max_length=255)),
                ('season_kind', models.IntegerField(blank=True, choices=[(1, 'Summer'), (2, 'Midwinter'), (3, 'Fall'), (4, 'Spring')], null=True)),
                ('district_code', models.CharField(blank=True, max_length=255)),
                ('convention_name', models.CharField(blank=True, max_length=255)),
                ('session_kind', models.IntegerField(blank=True, choices=[(32, 'Chorus'), (41, 'Quartet'), (42, 'Mixed'), (43, 'Senior'), (44, 'Youth'), (45, 'Unknown'), (46, 'VLQ')], null=True)),
                ('round_kind', models.IntegerField(blank=True, choices=[(1, 'Finals'), (2, 'Semi-Finals'), (3, 'Quarter-Finals')], null=True)),
                ('group_name', models.CharField(blank=True, max_length=255)),
                ('appearance_num', models.IntegerField(blank=True, null=True)),
                ('song_num', models.IntegerField(blank=True, null=True)),
                ('song_title', models.CharField(blank=True, max_length=255)),
                ('totals', models.IntegerField(blank=True, null=True)),
                ('points', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), blank=True, null=True, size=None)),
                ('num_sessions', models.IntegerField(blank=True, null=True)),
                ('num_rounds', models.IntegerField(blank=True, null=True)),
                ('num_appearances', models.IntegerField(blank=True, null=True)),
                ('num_panelists', models.IntegerField(blank=True, null=True)),
                ('song', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.Song')),
            ],
        ),
        migrations.AddField(
            model_name='flat',
            name='selection',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flats', to='keller.Selection'),
        ),
        migrations.AlterUniqueTogether(
            name='flat',
            unique_together={('complete', 'selection', 'score')},
        ),
    ]
