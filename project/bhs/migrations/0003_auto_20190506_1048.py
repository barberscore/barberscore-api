# Generated by Django 2.1.8 on 2019-05-06 17:48

import bhs.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_fsm
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('bhs', '0002_person'),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(default='UNKNOWN', help_text='\n            The name of the resource.\n        ', max_length=255)),
                ('status', django_fsm.FSMIntegerField(choices=[(-10, 'Inactive'), (-5, 'AIC'), (0, 'New'), (10, 'Active')], default=0, help_text='DO NOT CHANGE MANUALLY unless correcting a mistake.  Use the buttons to change state.')),
                ('kind', models.IntegerField(choices=[('International', [(1, 'International')]), ('District', [(11, 'District'), (12, 'Noncompetitive'), (13, 'Affiliate')]), ('Chapter', [(30, 'Chapter')]), ('Group', [(32, 'Chorus'), (41, 'Quartet'), (46, 'VLQ')])], help_text='\n            The kind of group.\n        ')),
                ('gender', models.IntegerField(choices=[(10, 'Male'), (20, 'Female'), (30, 'Mixed')], default=10, help_text='\n            The gender of group.\n        ')),
                ('division', models.IntegerField(blank=True, choices=[('EVG', [(10, 'EVG Division I'), (20, 'EVG Division II'), (30, 'EVG Division III'), (40, 'EVG Division IV'), (50, 'EVG Division V')]), ('FWD', [(60, 'FWD Arizona'), (70, 'FWD Northeast'), (80, 'FWD Northwest'), (90, 'FWD Southeast'), (100, 'FWD Southwest')]), ('LOL', [(110, 'LOL 10000 Lakes'), (120, 'LOL Division One'), (130, 'LOL Northern Plains'), (140, 'LOL Packerland'), (150, 'LOL Southwest')]), ('MAD', [(170, 'MAD Central'), (180, 'MAD Northern'), (190, 'MAD Southern')]), ('NED', [(210, 'NED Granite and Pine'), (220, 'NED Mountain'), (230, 'NED Patriot'), (240, 'NED Sunrise'), (250, 'NED Yankee')]), ('SWD', [(260, 'SWD Northeast'), (270, 'SWD Northwest'), (280, 'SWD Southeast'), (290, 'SWD Southwest')])], null=True)),
                ('bhs_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('code', models.CharField(blank=True, help_text='\n            Short-form code.', max_length=255)),
                ('website', models.URLField(blank=True, help_text='\n            The website URL of the resource.')),
                ('email', bhs.fields.LowerEmailField(blank=True, help_text='\n            The contact email of the resource.', max_length=254, null=True)),
                ('phone', models.CharField(blank=True, help_text='\n            The phone number of the resource.  Include country code.', max_length=25)),
                ('fax_phone', models.CharField(blank=True, help_text='\n            The fax number of the resource.  Include country code.', max_length=25)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('location', models.CharField(blank=True, help_text='\n            The geographical location of the resource.', max_length=255)),
                ('facebook', models.URLField(blank=True, help_text='\n            The facebook URL of the resource.')),
                ('twitter', models.URLField(blank=True, help_text='\n            The twitter URL of the resource.')),
                ('youtube', models.URLField(blank=True, default='', help_text='\n            The youtube URL of the resource.')),
                ('pinterest', models.URLField(blank=True, default='', help_text='\n            The pinterest URL of the resource.')),
                ('flickr', models.URLField(blank=True, default='', help_text='\n            The flickr URL of the resource.')),
                ('instagram', models.URLField(blank=True, default='', help_text='\n            The instagram URL of the resource.')),
                ('soundcloud', models.URLField(blank=True, default='', help_text='\n            The soundcloud URL of the resource.')),
                ('image', models.ImageField(blank=True, null=True, upload_to=bhs.fields.ImageUploadPath())),
                ('description', models.TextField(blank=True, help_text='\n            A description of the group.  Max 1000 characters.', max_length=1000)),
                ('visitor_information', models.TextField(blank=True, default='', max_length=255)),
                ('participants', models.CharField(blank=True, default='', help_text='Director(s) or Members (listed TLBB)', max_length=255)),
                ('notes', models.TextField(blank=True, help_text='\n            Notes (for internal use only).')),
                ('mc_pk', models.CharField(blank=True, db_index=True, max_length=36, null=True, unique=True)),
                ('tree_sort', models.IntegerField(blank=True, editable=False, null=True, unique=True)),
                ('international', models.TextField(blank=True, help_text='\n            The denormalized international group.', max_length=255)),
                ('district', models.TextField(blank=True, help_text='\n            The denormalized district group.', max_length=255)),
                ('chapter', models.TextField(blank=True, help_text='\n            The denormalized chapter group.', max_length=255)),
                ('is_senior', models.BooleanField(default=False, help_text='Qualifies as a Senior Group.  This can be set manually, but is denormlized nightly for quartets.')),
                ('is_youth', models.BooleanField(default=False, help_text='Qualifies as a Youth Group.  Must be set manually.')),
                ('is_divided', models.BooleanField(default=False, help_text='This district has divisions.')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='bhs.Group')),
            ],
            options={
                'verbose_name_plural': 'groups',
                'ordering': ['tree_sort'],
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', django_fsm.FSMIntegerField(choices=[(-10, 'Inactive'), (0, 'New'), (10, 'Active')], default=0, help_text='DO NOT CHANGE MANUALLY unless correcting a mistake.  Use the buttons to change state.')),
                ('part', models.IntegerField(blank=True, choices=[(1, 'Tenor'), (2, 'Lead'), (3, 'Baritone'), (4, 'Bass')], null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('mc_pk', models.CharField(blank=True, db_index=True, max_length=36, null=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='bhs.Group')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='bhs.Person')),
            ],
        ),
        migrations.CreateModel(
            name='Officer',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', django_fsm.FSMIntegerField(choices=[(-10, 'Inactive'), (0, 'New'), (10, 'Active')], default=0, help_text='DO NOT CHANGE MANUALLY unless correcting a mistake.  Use the buttons to change state.')),
                ('office', models.IntegerField(blank=True, choices=[('International', [(100, 'SCJC Chair'), (110, 'SCJC Chair Past'), (120, 'SCJC CA'), (130, 'SCJC MUS'), (140, 'SCJC PER'), (150, 'SCJC SNG'), (160, 'SCJC Chart'), (170, 'SCJC Admin'), (230, 'JUDGE CA'), (240, 'JUDGE MUS'), (250, 'JUDGE PER'), (260, 'JUDGE SNG'), (270, 'CANDIDATE CA'), (280, 'CANDIDATE MUS'), (290, 'CANDIDATE PER'), (295, 'CANDIDATE SNG')]), ('District', [(210, 'DRCJ'), (220, 'DRCJ Assistant')]), ('Chapter', [(310, 'CPRES'), (320, 'CSEC')]), ('Chorus', [(330, 'KDIR'), (340, 'KASS'), (350, 'KMAN')]), ('Quartet', [(410, 'QADM')])], null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('mc_pk', models.CharField(blank=True, db_index=True, max_length=36, null=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='officers', to='bhs.Group')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='officers', to='bhs.Person')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='officer',
            unique_together={('group', 'person')},
        ),
        migrations.AlterUniqueTogether(
            name='member',
            unique_together={('group', 'person')},
        ),
        migrations.AlterUniqueTogether(
            name='group',
            unique_together={('bhs_id', 'kind')},
        ),
    ]
